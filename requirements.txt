# Excel Analytics Platform - Frontend Requirements
# ==============================================
# This file documents all dependencies required for the Excel Analytics Platform frontend
# Last Updated: 2024-12-19
# Project Version: 0.1.0

# Core React Dependencies
# =======================
react==19.1.0                    # Core React library for building user interfaces
react-dom==19.1.0               # React DOM rendering for web browsers
react-scripts==5.0.1            # Create React App scripts and configuration

# Routing
# =======
react-router-dom==7.7.1         # Client-side routing for React applications

# Testing Dependencies
# ===================
@testing-library/react==16.3.0  # Testing utilities for React components
@testing-library/dom==10.4.1    # Testing utilities for DOM elements
@testing-library/jest-dom==6.6.4 # Custom Jest matchers for DOM testing
@testing-library/user-event==13.5.0 # Simulate user events in tests

# Performance Monitoring
# =====================
web-vitals==2.1.4               # Measure and report Core Web Vitals

# Development Dependencies (Optional)
# ==================================
@tailwindcss/vite==4.1.11       # Tailwind CSS integration (currently using CDN)

# Installation Instructions
# ========================
# 1. Ensure Node.js is installed (version 16 or higher recommended)
# 2. Run: npm install
# 3. Start development server: npm start
# 4. Build for production: npm run build

# Browser Support
# ===============
# Production: >0.2%, not dead, not op_mini all
# Development: last 1 chrome version, last 1 firefox version, last 1 safari version

# Key Features Implemented
# =======================
# ✅ User Authentication (Login/Register with OTP)
# ✅ Role-based Access Control (User/Admin)
# ✅ File Upload Interface
# ✅ Chart Configuration UI
# ✅ Admin Panel with Multiple Sections
# ✅ User Profile Management
# ✅ Feedback/Bug Report System
# ✅ Responsive Design
# ✅ Dark Mode with Glassmorphism
# ✅ Landing Page

# Future Dependencies (To be added when implementing backend)
# ==========================================================
# axios==^1.6.0                 # HTTP client for API calls
# xlsx==^0.18.5                 # Excel file parsing
# chart.js==^4.4.0              # Chart generation
# react-chartjs-2==^5.2.0       # React wrapper for Chart.js
# file-saver==^2.0.5            # File download functionality
# jwt-decode==^4.0.0            # JWT token decoding
# react-hook-form==^7.48.0      # Form handling
# yup==^1.3.0                   # Form validation

# Environment Requirements
# =======================
# Node.js: >=16.0.0
# npm: >=8.0.0
# Modern web browser with ES6+ support

# Development Tools (Recommended)
# ==============================
# VS Code with extensions:
# - ES7+ React/Redux/React-Native snippets
# - Tailwind CSS IntelliSense
# - Prettier - Code formatter
# - ESLint
# - Auto Rename Tag

# Project Structure
# ================
# src/
# ├── components/
# │   ├── Auth/           # Authentication components
# │   └── Common/         # Shared components
# ├── pages/              # Main page components
# └── index.js            # Application entry point

# Notes
# =====
# - Tailwind CSS is currently loaded via CDN for simplicity
# - All chart generation is currently placeholder (frontend UI only)
# - Authentication uses localStorage for demo purposes
# - OTP system is simulated (check console for generated codes)
# - Admin passkey: ADMIN2024 (hardcoded for demo) 